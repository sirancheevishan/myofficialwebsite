{"version":3,"sources":["Components/Main.js","serviceWorker.js","index.js"],"names":["Requestform","prop","assignedvalue","event","currentTarget","dataset","type","toString","val","value","setState","prevState","Object","assign","Name","error","MailID","Subject","Message","sendmail","e","loadingstatus","preventDefault","errflg","state","RegExp","test","rest","target","emailjs","sendForm","then","result","console","log","text","status","swal","fire","title","icon","reset","MailStatus","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a24acca7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport swal from \"sweetalert2\";\r\n\r\nconst errbox = {\r\n  border: \"1px solid red\",\r\n};\r\nconst normalbox = {\r\n  border: \"1px solid #cec9c9\",\r\n};\r\nconst show = {\r\n  display: \"block !important\",\r\n};\r\nconst hide = {\r\n  display: \"none !important\",\r\n};\r\n\r\nclass Requestform extends React.Component {\r\n  constructor(prop) {\r\n    super(prop);\r\n    this.state = {\r\n      value: {\r\n        Name: \"\",\r\n        MailID: \"\",\r\n        Subject: \"\",\r\n        Message: \"\",\r\n      },\r\n      error: {\r\n        Name: \"\",\r\n        MailID: \"\",\r\n        Subject: \"\",\r\n        Message: \"\",\r\n      },\r\n      MailStatus: \"\",\r\n      loadingstatus: false,\r\n    };\r\n  }\r\n\r\n  assignedvalue = (event) => {\r\n    debugger;\r\n\r\n    if (event.currentTarget.dataset.type.toString() == \"Name\") {\r\n      const val = event.currentTarget.value;\r\n      if (val != \"\") {\r\n        this.setState((prevState) => {\r\n          let value = Object.assign({}, prevState.value);\r\n          value.Name = val;\r\n          return { value };\r\n        });\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Name = \"\";\r\n          return { error };\r\n        });\r\n      } else {\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Name = \"Please Enter your name\";\r\n          return { error };\r\n        });\r\n      }\r\n    }\r\n\r\n    if (event.currentTarget.dataset.type.toString() == \"Email\") {\r\n      const val = event.currentTarget.value;\r\n      if (val != \"\") {\r\n        this.setState((prevState) => {\r\n          let value = Object.assign({}, prevState.value);\r\n          value.MailID = val;\r\n          return { value };\r\n        });\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.MailID = \"\";\r\n          return { error };\r\n        });\r\n      } else {\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.MailID = \"Please Enter your Mail\";\r\n          return { error };\r\n        });\r\n      }\r\n    }\r\n\r\n    if (event.currentTarget.dataset.type.toString() == \"subject\") {\r\n      const val = event.currentTarget.value;\r\n      if (val != \"\") {\r\n        this.setState((prevState) => {\r\n          let value = Object.assign({}, prevState.value);\r\n          value.Subject = val;\r\n          return { value };\r\n        });\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Subject = \"\";\r\n          return { error };\r\n        });\r\n      } else {\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Subject = \"Please Enter Subject\";\r\n          return { error };\r\n        });\r\n      }\r\n    }\r\n\r\n    if (event.currentTarget.dataset.type.toString() == \"Message\") {\r\n      const val = event.currentTarget.value;\r\n      if (val != \"\") {\r\n        this.setState((prevState) => {\r\n          let value = Object.assign({}, prevState.value);\r\n          value.Message = val;\r\n          return { value };\r\n        });\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Message = \"\";\r\n          return { error };\r\n        });\r\n      } else {\r\n        this.setState((prevState) => {\r\n          let error = Object.assign({}, prevState.error);\r\n          error.Message = \"Please Enter Message\";\r\n          return { error };\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  sendmail = (e) => {\r\n    debugger;\r\n\r\n    this.setState({\r\n      loadingstatus: true,\r\n    });\r\n\r\n    e.preventDefault();\r\n    var errflg = false;\r\n\r\n    if (this.state.value.Name == \"\") {\r\n      errflg = true;\r\n      this.setState((prevState) => {\r\n        let error = Object.assign({}, prevState.error);\r\n        error.Name = \"Please Enter Name\";\r\n        return { error };\r\n      });\r\n    }\r\n    if (this.state.value.MailID == \"\") {\r\n      errflg = true;\r\n      this.setState((prevState) => {\r\n        let error = Object.assign({}, prevState.error);\r\n        error.MailID = \"Please Enter Mail ID\";\r\n        return { error };\r\n      });\r\n    }\r\n    if (this.state.value.Subject == \"\") {\r\n      errflg = true;\r\n      this.setState((prevState) => {\r\n        let error = Object.assign({}, prevState.error);\r\n        error.Subject = \"Please Enter Subject\";\r\n        return { error };\r\n      });\r\n    }\r\n    if (this.state.value.Message == \"\") {\r\n      errflg = true;\r\n      this.setState((prevState) => {\r\n        let error = Object.assign({}, prevState.error);\r\n        error.Message = \"Please Enter Message\";\r\n        return { error };\r\n      });\r\n    }\r\n\r\n    var pattern = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n\r\n    if (!pattern.test(this.state.value.MailID)) {\r\n      errflg = true;\r\n      this.setState((prevState) => {\r\n        let error = Object.assign({}, prevState.error);\r\n        error.MailID = \"Please Enter valid email address.\";\r\n        return { error };\r\n      });\r\n    }\r\n\r\n    if (errflg == true) return false;\r\n    var rest = e.target;\r\n    emailjs\r\n      .sendForm(\r\n        \"gmail\",\r\n        \"template_ybxblbn\",\r\n        e.target,\r\n        \"user_UphYegg5nyIVFIapd55Pw\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            loadingstatus: false,\r\n          });\r\n          console.log(result.text);\r\n          if (result.text == \"OK\" && result.status == \"200\") {\r\n            swal\r\n              .fire({\r\n                title: \"Success!\",\r\n                text: \"Your Mail Send Sucessfully.\",\r\n                type: \"success\",\r\n                icon: \"success\",\r\n              })\r\n              .then(() => {\r\n                rest.reset();\r\n              });\r\n          } else {\r\n            swal\r\n              .fire({\r\n                title: \"Failure!\",\r\n                text: \"Unable to send mail. Please try again later.\",\r\n                type: \"error\",\r\n                icon: \"error\",\r\n              })\r\n              .then(() => {\r\n                rest.reset();\r\n              });\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            loadingstatus: false,\r\n          });\r\n          swal\r\n            .fire({\r\n              title: \"Failure!\",\r\n              text: \"Problem occured while send mail. Please try again later.\",\r\n              type: \"error\",\r\n              icon: \"error\",\r\n            })\r\n            .then(() => {\r\n              rest.reset();\r\n            });\r\n        }\r\n      );\r\n\r\n    // e.target.reset();\r\n  };\r\n\r\n  render() {\r\n    const errmsg = {\r\n      color: \"red\",\r\n    };\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Requestform;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Components/Main\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}